version "3.3"

// ------------------------------------------------------------------------------------------------
//
//   NC HUD - Faspons
//
// ------------------------------------------------------------------------------------------------

class NCH_FasponsHUD : NCH_BaseHUD
{
	override void NCHF_AddAmmos ()
	{
		NCHF_AddSingleAmmo("RifleAmmo");
		NCHF_AddSingleAmmo("Shell");
		NCHF_AddSingleAmmo("Nato");
		NCHF_AddSingleAmmo("RocketAmmo");
		NCHF_AddSingleAmmo("Cell");
		NCHF_AddSingleAmmo("HandGrenadeAmmo");
	}

	override void NCHF_DrawAirSupply ()
	{
		if (NCHF_GetCVar('nchud_toggleair') &&
			CPlayer.health > 0 &&
			level.airsupply > 0 && CPlayer.mo.AirCapacity > 0 &&
			(CPlayer.air_finished + 1 - level.maptime) < int(level.airsupply * CPlayer.mo.AirCapacity))
		{
			NCHF_DrawBarLabel(StringTable.Localize("$NCH_LABEL_AIR"), -99, DI_SCREEN_BOTTOM);
			DrawImage(NCHF_GetBackgroundGFX("H_BGAIR"), (0, -71), DI_ITEM_CENTER | DI_SCREEN_CENTER_BOTTOM);

			int curpnts = Max(CPlayer.air_finished - level.maptime, 0);
			int maxpnts = int(level.airsupply * CPlayer.mo.AirCapacity);
			string barframe = "H_BRFMX3";
			string barfg = "H_BRFLG3";

			// Low on air.
			if((curpnts * 100 / maxpnts) < NCHF_GetLowState('nchud_airlowstate'))
			{
				barframe = "H_BFGR3A";
				barfg = "H_BRFLR3";
			}

			DrawImage(barframe, (0, -71), DI_ITEM_CENTER | DI_SCREEN_CENTER_BOTTOM);
			NCHF_DrawBar(barfg, "H_BRBGB3", curpnts, maxpnts, (0, -71), 0, SHADER_HORZ, DI_ITEM_CENTER | DI_SCREEN_CENTER_BOTTOM);
		}	
		else if (GetAmount("Adrenaline") > 0)
		{
			NCHF_DrawBarLabel(StringTable.Localize("$NCH_LABEL_ADRENALINE"), -99, DI_SCREEN_BOTTOM);
			DrawImage(NCHF_GetBackgroundGFX("H_BGAIR"), (0, -71), DI_ITEM_CENTER | DI_SCREEN_CENTER_BOTTOM);

			string barframe = "H_BRFMX3";
			string barfg = "H_BRFLG3";

			DrawImage(barframe, (0, -71), DI_ITEM_CENTER | DI_SCREEN_CENTER_BOTTOM);
			NCHF_DrawBar(barfg, "H_BRBGB3", Max(GetAmount("Adrenaline"), 0), GetMaxAmount("Adrenaline"), (0, -71), 0, SHADER_HORZ, DI_ITEM_CENTER | DI_SCREEN_CENTER_BOTTOM);
		}
	}
}
